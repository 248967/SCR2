Uruchomiłam program z zadania 2, który przechwytuje sygnały SIGALRM, SIGTERM, SIGUID1, SIGUID2. Następnie sprawdziłam tablicę akcji:
SIGALRM – akcja: Term (domyślną akcją jest przerwanie procesu), sygnał timera od alarm().
SIGTERM – akcja: Term, sygnał zakończenia pracy.
SIGUSR1 – akcja: Term, sygnał 1 użytkownika.
 SIGUSR2 – akcja: Term, sygnał 2 użytkownika.

Komendą more
izabela@openhab3:/proc/12685$ more status

sprawdziłam dla swojego programu PID 12685  plik status, w którym m.in. znalazłam wiersz:

SigCgt: 0000000000006a00

Linia ta wskazuje jakie sygnały są przechwytywane przez program. Aby sprawdzić, które to są sygnały trzeba zrobić:
1) zamienić zapis szesnastkowy 6a00 na binarny - w naszym wypadku będzie to: 0110 1010 0000 0000
2) czytając od prawej strony tam gdzie mamy jedynkę w zapisie binarnym oznacza to, który sygnał jest przechwytywany. W naszym wypadku są to sygnały nr 10, 12, 14, 15. 
Czyli zgodnie z tym, co zaprogramowałam w programie.

 

Napisałam skrypt skrypt4, który w nieskończonej pętli wyświetla napis.

Następnie stworzyłam potok 3 komend:

I dla każdego procesu wykonałam komendę jak poniżej, która pokazuje otwarte pliki - w szczególności "1" to wyjście procesu, a "0" to wejście:

ls -l /proc/nr pid/fd

Skrypt

izabela@openhab3:~$  ls -l /proc/11552/fd
total 0
lrwx------ 1 izabela izabela 64 lis 18 20:30 0 -> /dev/pts/0
l-wx------ 1 izabela izabela 64 lis 18 20:30 1 -> 'pipe:[86172]'
lrwx------ 1 izabela izabela 64 lis 18 20:30 2 -> /dev/pts/0
lr-x------ 1 izabela izabela 64 lis 18 20:30 255 -> /home/izabela/SCR2/Lab4/skrypt4

Grep

izabela@openhab3:~$ ls -l /proc/11553/fd
total 0
lr-x------ 1 izabela izabela 64 lis 18 20:31 0 -> 'pipe:[86172]'
l-wx------ 1 izabela izabela 64 lis 18 20:31 1 -> 'pipe:[86174]'
lrwx------ 1 izabela izabela 64 lis 18 20:31 2 -> /dev/pts/0

Cat

izabela@openhab3:~$ ls -l /proc/11554/fd
total 0
lr-x------ 1 izabela izabela 64 lis 18 20:31 0 -> 'pipe:[86174]'
lrwx------ 1 izabela izabela 64 lis 18 20:31 1 -> /dev/pts/0
lrwx------ 1 izabela izabela 64 lis 18 20:31 2 -> /dev/pts/0

Jak widać można odtworzyć kolejność wykonywania poleceń poprzez porównanie numerów pipów. W pierwszym procesie wyjście jest skierowane na pipe 86172, który jest pipem wejśiowym dla drugiego procesu. 
A z kolei pipe 86174 jest wyjściowym dla drugiego procesu, a wejściowym dla trzeciego.

